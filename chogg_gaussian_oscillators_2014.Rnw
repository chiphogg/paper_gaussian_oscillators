\documentclass[12pt,letterpaper]{article}
\begin{document}
\title{Visualizing uncertain curves and surfaces via Gaussian Oscillators}
\author{Charles~R.~Hogg~III}
\date{August~2014}
\maketitle

<<global_setup, include=FALSE>>=
require(ggplot2)
require(knitr)
require(gridExtra)

# Smart caching.
opts_chunk$set(cache=TRUE, autodep=TRUE)

theme_set(theme_grey(base_size=12))

set.seed(1)
@

\section{Introduction}
\label{sec:introduction}

(What's the idea?  What am I trying to do?)

The present author is aware of two main approaches in the literature.

Historically, most animations have been based on \textit{interpolation}\footnote{Get Skilling and ESG references; cite them here.}.
A series of independent draws from the Gaussian are generated and displayed at regular time intervals; these are called the \textit{keyframes}.
The frames at intervening times are weighted averages of the nearest two keyframes.
The weighting favours the first keyframe at the beginning of the interval, and the second keyframe near the end, so that the curve or surface changes continuously from one keyframe to the next.
Figure \ref{fig:interpolation}(a) illustrates the idea for a simple 1-dimensional Gaussian using three possible interpolating families: \textit{linear}, \textit{cubic spline}, and \textit{trigonometric}.

<<interpolation_plots, include=FALSE>>=
source('interpolation.R')

quantiles <- c(0.1, 0.5, 0.9)
num.interpolated.curves <- 5e2  # Make it bigger later
num.points <- 500
num.keyframes <- 4
interpolation.caption <- sprintf(
    paste("Interpolation illustrated for a standard 1-D Gaussian.",
          "(a) A single set of normal draws interpolated by three methods.",
          "(b) Pointwise quantiles for interpolating %s random draws."),
    formatC(num.interpolated.curves, big.mark=',', format='fg'))

interp.matrix.functions <- list(Linear=InterpLinear,
                                Spline=InterpSpline,
                                Trigonometric=InterpTrig)

p.concept <- InterpolationConceptPlot(
    interp.matrix.functions=interp.matrix.functions,
    n.points=num.points,
    n.keyframes=num.keyframes)

p.interp <- InterpolationQuantilePlot(
    interp.matrix.functions=interp.matrix.functions,
    quantiles=quantiles,
    n.draws=num.interpolated.curves,
    n.points=num.points,
    n.keyframes=num.keyframes)
@

<<interpolation, cache=FALSE, echo=FALSE, fig.cap=interpolation.caption>>=
grid.arrange(p.concept,
             p.interp,
             ncol=1)
@


((Trigonometric interpolation (Skilling; ESG).  Use figure to show percentiles.))

((Great-circles by Hennig.  For the first time, smooth and keyframe-free.))

\section{Gaussian Oscillators}
\label{sec:gaussian_oscillators}

(Explain the idea of a Gaussian Oscillator.)

(Explain they are a specific kind of time-domain Gaussian processes, but there may be more/less efficient ways to compute them.)

(Note: Hennig's great circles are not quite GOs, because the 1-D Gaussians are not independent; constrained to have constant mean.)

\section{A New Way to Generate Animations}
\label{sec:a_new_way_to_generate_animations}

(Introduce my approach)

(Relationship to Fourier transforms)

(Mention non-looping version)

\section{Comparison}
\label{sec:comparison}

\subsection{Kinematic Properties}
\label{sub:kinematic_properties}

(Consider motion as a physical object; velocity and acceleration.)

\subsection{Statistical Properties}
\label{sub:statistical_properties}

\subsection{Computational Properties}
\label{sub:computational_properties}

(How many random numbers does it take?)

\section{Future Work}
\label{sec:future_work}

\subsection{Animating non-Gaussian distributions}
\label{sub:animating_non_gaussian_distributions}

(``Nearly Gaussian'': time warping.)

Other challenging cases:

(Discrete distributions.)

((Obviously, we can't animate these continuously.))

((However, maybe special cases can kinda sorta work, e.g., Poisson/Anscombe transform.))

(Disconnected/thinly connected regions.)

((Maybe animate each mode/region separately.))

\subsection{Alternative time-domain covariance functions}
\label{sub:alternative_time_domain_covariance_functions}

(Compact support: endless exploration!)

(Challenging to do in R: no framebuf support.)

((However, could output javascript with d3.js!))

\section{Conclusions}
\label{sec:conclusions}

\end{document}

Ideas which need a home

(Looping vs. non-looping)
